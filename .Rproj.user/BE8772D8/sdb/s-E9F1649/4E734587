{
    "collab_server" : "",
    "contents" : "# JMJPFU\n# 11-Nov-2016\n\n# This is a file to store functions which are used for analysis\n\nfirstier <- function(stud_consol){\n  \n  students <- unique(stud_consol$StudentID)\n  \n  stud_all <- data.frame(matrix(nrow=0,ncol=7))\n  \n  names(stud_all) <- c(\"Month\",\"Var\",\"FirstTier\",\"StudentID\",\"School\",\"Race\",\"Economic\")\n  \n  for(i in 1:length(students)){\n    \n    stud_indi <- data.frame(matrix(nrow=0,ncol = 3))\n    names(stud_indi) <- c(\"Month\",\"Var\", \"FirstTier\")\n    \n    stud <- students[i]\n    \n    # Filtering the record of the student\n    \n    stud_rec <- stud_consol %>% filter(StudentID == stud)\n    \n    # First filtering the Discipline Data\n    \n    stud_dis <- stud_rec %>% filter(FirstTier == \"Discipline\")\n    \n    if(nrow(stud_dis) > 0){ # Do further analysis only if there are any relevant records\n      \n      stud_agg <- stud_dis %>% group_by(Month) %>% summarise(Var = sum(as.numeric(Variable),na.rm=TRUE))\n      stud_agg$FirstTier <- \"Discipline\"\n      stud_indi <- rbind(stud_indi,stud_agg)\n      \n    }\n    \n    # Filter Grade Data\n    \n    stud_grad <- stud_rec %>% filter(FirstTier == \"Grade\")\n    \n    if(nrow(stud_grad) > 0){ # Do further analysis only if there are any relevant records\n      \n      stud_agg2 <- stud_grad %>% group_by(Month) %>% summarise(Var = mean(as.numeric(Variable),na.rm=TRUE))\n      \n      stud_agg2$FirstTier <- \"Grade\"\n      stud_indi <- rbind(stud_indi,stud_agg2)\n      \n    }\n    \n    # Filter Attendence Data\n    \n    stud_att <- stud_rec %>% filter(FirstTier == \"Attendence\")\n    \n    if(nrow(stud_att) > 0){ # Do further analysis only if there are any relevant records\n      \n      stud_agg3 <- stud_att %>% group_by(Month) %>% summarise(Var = sum(as.numeric(Variable),na.rm=TRUE))\n      \n      stud_agg3$FirstTier <- \"Attendence\"\n      stud_indi <- rbind(stud_indi,stud_agg3)\n      \n    } # End of the if loop for attendence\n    \n    stud_indi$StudentID <- stud\n    stud_indi$School <- stud_rec$Schoolname[1]\n    stud_indi$Race <- stud_rec$Race[1]\n    stud_indi$Economic <- stud_rec$Economic[1]\n    # Attaching it with all the student data\n    stud_all <- rbind(stud_all,stud_indi)\n    \n  } # End of the for loop to go over the students list\n    \n   \n  stud_all\n  \n  \n} # End of the function\n\n#############################\n# JMJPFU\n# 14-nov-2016\n\n# A function to find the average values of discipline and grades in various bins\n\n\n\nbinvals <- function(bins,Indi_attend){\n  \n  bindata <- data.frame(matrix(nrow=0,ncol=3))\n  names(bindata) <- c(\"Value\",\"Variable\",\"Bin\")\n  \n for(k in 1:16) {\n   \n   i = (2*k)-1 \n   j = i+1\n   \n   bot = bins[i]\n   top = bins[j]\n   \n   attend_bin <- Indi_attend %>% filter(Attend > bot & Attend <= top)\n   \n   stud_no <- nrow(attend_bin)\n   \n  \n   label <- paste0(\"bin\",\"_\",bot,\"_\",top)\n   \n   disval <- Desoto_New %>% filter(StudentID %in% attend_bin$StudentID) %>% filter(FirstTier == \"Discipline\") %>% summarise(Value = sum(as.numeric(Variable),na.rm=TRUE))\n   disval$Value <- disval$Value/stud_no\n   \n   disval$Variable <- \"Discipline\"\n   disval$Bin <- label\n   \n   gradval <- Desoto_New %>% filter(StudentID %in% attend_bin$StudentID) %>% filter(FirstTier == \"Grade\") %>% summarise(Value = mean(as.numeric(Variable),na.rm=TRUE))   \n   \n   gradval$Variable <- \"Grade\"\n   gradval$Bin <- label\n   \n   comb <- rbind(disval,gradval)\n   \n   bindata <- rbind(bindata,comb)\n }\n  \n  \nbindata\n  \n  \n}\n\n\n\n####################\n\n# A function similar to the above function, however without the normalisation\n\n\n\nbinvals1 <- function(bins,Indi_attend){\n  \n  bindata <- data.frame(matrix(nrow=0,ncol=3))\n  names(bindata) <- c(\"Value\",\"Variable\",\"Bin\")\n  \n  for(k in 1:16) {\n    \n    i = (2*k)-1 \n    j = i+1\n    \n    bot = bins[i]\n    top = bins[j]\n    \n    attend_bin <- Indi_attend %>% filter(Attend > bot & Attend <= top)\n    \n    \n    \n    label <- paste0(\"bin\",\"_\",bot,\"_\",top)\n    \n    disval <- Desoto_New %>% filter(StudentID %in% attend_bin$StudentID) %>% filter(FirstTier == \"Discipline\") %>% summarise(Value = sum(as.numeric(Variable),na.rm=TRUE))\n    \n    disval$Variable <- \"Discipline\"\n    disval$Bin <- label\n    \n    gradval <- Desoto_New %>% filter(StudentID %in% attend_bin$StudentID) %>% filter(FirstTier == \"Grade\") %>% summarise(Value = mean(as.numeric(Variable),na.rm=TRUE))   \n    \n    gradval$Variable <- \"Grade\"\n    gradval$Bin <- label\n    \n    comb <- rbind(disval,gradval)\n    \n    bindata <- rbind(bindata,comb)\n  }\n  \n  \n  bindata\n  \n  \n}\n\n\n\n\n\n\n  \n########################\n# JMJPFU\n# 15-Nov-2016\n# Let us look at normalising the second  Tier information for studgrade\n\ngrade_norm <- function(stud_grade){\n  \n  for(i in 1:nrow(stud_grade)){\n    if(stud_grade$SecondTier[i] == \"01\"){ stud_grade$SecondTier[i] <- \"1\"}\n    else if(stud_grade$SecondTier[i] == \"02\"){ stud_grade$SecondTier[i] <- \"2\"}\n    else if(stud_grade$SecondTier[i] == \"03\"){ stud_grade$SecondTier[i] <- \"3\"}\n    else if(stud_grade$SecondTier[i] == \"04\"){ stud_grade$SecondTier[i] <- \"4\"}\n    else if(stud_grade$SecondTier[i] == \"05\"){ stud_grade$SecondTier[i] <- \"5\"}\n    else if(stud_grade$SecondTier[i] == \"06\"){ stud_grade$SecondTier[i] <- \"6\"}\n    else if(stud_grade$SecondTier[i] == \"07\"){ stud_grade$SecondTier[i] <- \"7\"}\n    else if(stud_grade$SecondTier[i] == \"08\"){ stud_grade$SecondTier[i] <- \"8\"}\n    else if(stud_grade$SecondTier[i] == \"09\"){ stud_grade$SecondTier[i] <- \"9\"}\n  }\n    \n    \n    \n    stud_grade\n    \n    \n} # End of function\n\n############ imputing from the notebook\n\n# Need to impute NA into Desoto_New where the value is 0\n\nfor(i in 1593:nrow(Desoto_New)){\n  print(i)\n  tier <- Desoto_New$FirstTier[i]\n  tvar <- Desoto_New$Variable[i]\n  \n  if(!is.na(tvar) & tier == \"Grade\" & tvar == 0){\n    \n    Desoto_New$Variable[i] <- NA\n    \n  }\n  \n  \n}\n",
    "created" : 1478852245611.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "1740089079",
    "id" : "4E734587",
    "lastKnownWriteTime" : 31244220638363763,
    "last_content_update" : 1479208906184,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}